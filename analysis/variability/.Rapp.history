## standardd#
install.packages("parallel")#
#
## community analysis#
install.packages("vegan")#
#
## networks#
install.packages("igraph")#
install.packages("bipartite")#
install.packages("RColorBrewer")#
install.packages("sna")#
#
## phylogeny#
install.packages("TreeSim")#
install.packages("ape")#
install.packages("picante")#
install.packages("geiger")#
#
## misc#
install.packages("mvtnorm")#
install.packages("classInt")#
install.packages("fields")#
install.packages("poilog")#
install.packages("moments")#
#
## jags#
install.packages("rjags")#
install.packages("R2jags")#
install.packages("runjags")#
install.packages("ggmcmc")#
#
## spatial#
install.packages("sp")#
install.packages("rgdal")#
install.packages("raster")#
install.packages("spatstat")#
install.packages("maptools")#
install.packages("SDMTools")#
#
## models#
install.packages("lme4")#
install.packages("RSQLite")#
install.packages("lmerTest")#
install.packages("metafor")#
install.packages("pbkrtest")#
install.packages("glmmADMB", repos=c("http://glmmadmb.r-forge.r-project.org/repos", getOption("repos")),type="source")#
## dynamic docs#
install.packages("knitr")
2+2+3+2
(9*16) + 2+7+11+8
172/16
(2*16) + (2*16) + 2 +(3*16) + 16 + 7 +16+11+8
172/16
3*6
18/12
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/speciesLevel')#
source('src/initialize.R')#
load('../../data/networks/all_networks_years.Rdata')#
#
## **********************************************************#
## species importance#
## **********************************************************#
## specs <- calcSpec(nets, spec, spec.metric = "d", 0.3)#
## save(specs, file=file.path(save.path, 'specs.Rdata'))#
#
## linear models#
load(file=file.path(save.path, 'specs.Rdata'))#
## SiteStatus or ypr#
xvar <- "ypr"#
#
## anything outputted by specieslevel#
ys <- c("proportional.generality", "d", "degree", "betweenness",#
        "closeness")#
#
## formulas <-lapply(ys, function(x) {#
##   as.formula(paste(x, "~",#
##                    paste(paste(xvar, "specialization", sep="*"), #
##                          "(1|Site)",#
##                           "(1|GenusSpecies)",#
##                          sep="+")))#
## })#
#
formulas <-lapply(ys, function(x) {#
  as.formula(paste(x, "~",#
                   paste(xvar, #
                         "(1|Site)",#
                          "(1|GenusSpecies)",#
                         sep="+")))#
})#
#
mod.pols <- lapply(formulas, function(x){#
  lmer(x,#
       data=specs[specs$speciesType == "pollinator",])#
})#
#
mod.plants <- lapply(formulas, function(x){#
  lmer(x,#
       data=specs[specs$speciesType == "plant",])#
})#
names(mod.pols) <- names(mod.plants) <- ys#
lapply(mod.plants, summary)#
lapply(mod.pols, summary)#
#
save(mod.pols, mod.plants, ys, file=file.path(save.path,#
            sprintf('mods/specs_%s.Rdata', xvar)))#
#
## **********************************************************#
## degree distributions (abundance distributions)#
## **********************************************************#
#
baci.sites <- c("Barger", "Butler", "MullerB", "Sperandio", "Hrdy")#
specs <- specs[specs$Site %in% baci.sites,]#
#
layout(matrix(1:6, nrow=2))#
cols <- rainbow(length(unique(specs$ypr)))#
lapply(unique(specs$Site), function(x){#
  print(x)#
  this.specs <- specs[specs$Site == x, c("degree", "ypr")]#
  plot(NA, ylim=c(0,0.8), xlim=c(0,25),#
       ylab="Frequency",#
       xlab="Abundance",#
       main=x)#
  for(i in 1:length(unique(this.specs$ypr))){#
    this.ypr <- unique(this.specs$ypr)[i]#
    print(this.ypr)#
    points(density(this.specs$degree[this.specs$ypr == this.ypr]),#
           col=cols[i], type="l", lwd=2)#
  }#
})#
#
plot(NA, ylim=c(0,1), xlim=c(0,1), xaxt="n", yaxt="n", ylab="", xlab="")#
legend("center", col=cols, lwd="2",#
       legend=sort(unique(specs$ypr)),#
       bty="n")
source('plotting/src/predictIntervals.R')#
source('plotting/src/CIplotting.R')#
source('plotting/src/plotPanels.R')#
load(file='saved/corMets.Rdata')#
#
dd <- expand.grid(ypr=seq(from= min(cor.dats$ypr, na.rm=TRUE),#
                          to= max(cor.dats$ypr, na.rm=TRUE),#
                          length=10))#
#
## ************************************************************#
## nodf#
## ************************************************************#
load(file='saved/mods/baci_nodf.Rdata')#
#
dd.nodf <- cbind(dd, zNODF=0)#
#
nodf.pi <- predict.int(mod= baci.nodf.mod,#
                        dd=dd.nodf,#
                        y="zNODF",#
                        family="gaussian")#
#
## plot.predict.ypr(new.dd=nodf.pi,#
##                  ylabel="Nestedness",#
##                  dats=cor.dats,#
##                  y1="zNODF")#
#
## ************************************************************#
## modularity#
## ************************************************************#
load(file='saved/mods/baci_mod.Rdata')#
#
dd.mod <- cbind(dd, zmod.met.D=0)#
#
mod.pi <- predict.int(mod= baci.mod.mod,#
                        dd=dd.mod,#
                        y="zmod.met.D",#
                        family="gaussian")#
#
## plot.predict.ypr(new.dd=mod.pi,#
##                  ylabel="Modularity",#
##                  dats=cor.dats,#
##                  y1="zmodD")#
#
## ************************************************************#
## specialization#
## ************************************************************#
load(file='saved/mods/baci_h2.Rdata')#
#
dd.h2 <- cbind(dd, H2=0)#
#
h2.pi <- predict.int(mod= baci.h2.mod,#
                        dd=dd.h2,#
                        y="H2",#
                        family="gaussian")#
#
## plot.predict.ypr(new.dd=h2.pi,#
##                  ylabel="Specialization",#
##                  dats=cor.dats,#
##                  y1="zH2")#
## ************************************************************#
## connectance#
## ************************************************************#
load(file='saved/mods/baci_conn.Rdata')#
#
dd.conn <- cbind(dd, connectance=0)#
#
conn.pi <- predict.int(mod= baci.conn.mod,#
                        dd=dd.conn,#
                        y="connectance",#
                        family="gaussian")#
#
## ************************************************************#
## plotting#
## ************************************************************#
plot.panels()
library(RColorBrewer)#
source('plotting/src/predictIntervals.R')#
source('plotting/src/CIplotting.R')#
source('plotting/src/plotPanels.R')#
load(file="saved/spec.Rdata")#
#
lapply(metrics, plotSpecs,#
       diff.spec = diff.spec[diff.spec$speciesType ==#
                                      "pollinator",],#
       type="pol",#
       path.f="figures/specialization")#
lapply(metrics, plotSpecs,#
       diff.spec = diff.spec[diff.spec$speciesType ==#
                                      "plant",],#
       type="plant",#
       path.f="figures/specialization")
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
install.package("linkcomm")
install.packages("linkcomm")
29
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
## phylo-beta of interactions#
## takes raw specimen data (spec.dat), the , #
calcCommDis <- function(spec.dat, type, lc, abund.w=TRUE){#
  ## prep community of sites and interactions#
  prep.comm <- aggregate(spec.dat[, type],#
                         list(site=spec.dat$Site,#
                              year=spec.dat$Year,#
                              status=spec.dat$SiteStatus,#
                              sp=spec.dat[, type]),#
                         length)#
  ## split by status then by site#
  bystatus <- split(prep.comm, prep.comm$status)#
  bysite1 <- lapply(bystatus, function(x){split(x, x$site)})#
  bysite <- unlist(bysite1, recursive=FALSE)#
  ## create a site by interaction community#
  comm <- lapply(bysite, function(y) {#
    samp2site.spp(y$year, y$sp, y$x)#
  })#
  ## drop sites that were only samples one year#
  comm <- comm[lapply(comm,nrow) > 1]#
  ## calculate the number of years between sampling times#
  years <- lapply(comm, rownames)#
  dist.time <- as.matrix(dist(unique(spec.dat$Year), diag=TRUE))#
  rownames(dist.time) <- colnames(dist.time) <- unique(spec.dat$Year) #
  dists.yrs <- lapply(years, function(x){dist.time[x,x]})#
  c.dist <- lapply(dists.yrs, function(x)#
                   {as.matrix(x)[lower.tri(x)]})#
  ## rename the species as node numbers in preparation for using#
  ## comdist using the dendrogram as distances#
  node.num <- cbind(lc$hclust$labels, paste(lc$edgelist[,1],#
                                            lc$edgelist[,2]))#
  node.order <- lapply(comm, function(x){#
    node.num[,1][match(colnames(x), node.num[,2])]#
  })#
  assignCols <- function(a,b){#
    colnames(a) <- b#
    return(a)#
  }#
  comm.int <- mapply(function(a, b)#
                     assignCols(a,b),#
                     a=comm,#
                     b=node.order)#
  dist.tree <- cophenetic(lc$hclust)#
  ## calculate the dissimilarity between years based on the dengrogram#
  comm.dis <- lapply(comm.int, comdist,#
                     dis=dist.tree,#
                     abundance.weighted= abund.w)#
#
  ## return a dataframe #
  c.comm <- lapply(comm.dis, function(x)#
                   {as.matrix(x)[lower.tri(x)]})#
  site <- sapply(strsplit(names(comm.dis), "\\."),#
                 function(x) x[2])#
  sites <- rep(site, sapply(c.comm, length))#
  out <- as.data.frame(cbind(PhyloInt=unlist(c.comm),#
                             Dist= unlist(c.dist)))#
  out$SiteStatus <- as.factor(sapply(strsplit(rownames(out), "\\."),#
                                 function(x) x[1]))#
  out$SiteStatus <- factor(out$SiteStatus,#
                           levels=c("control", "maturing", "mature")) #
  out$Site <- as.factor(sites)#
  rownames(out) <- NULL #
  return(list(phylo.int = out,#
              dist.tree=dist.tree,#
              comm=comm))#
}#
calcDendDis <- function(spec.dat, type){#
  prep.comm <- aggregate(spec.dat[, type[1]],#
                         list(sp=spec.dat[, type[1]],#
                              sp2= spec.dat[, type[2]]), length)#
  comm <- samp2site.spp(prep.comm$sp, prep.comm$sp2, prep.comm$x)#
  comm.dis <- vegdist(comm, "chao", diag= TRUE)#
  dengram <- hclust(comm.dis, method="average")#
#
  fden <- function(){#
    plot(dengram, cex.lab=0.5, hang=-1)#
  }#
  path.dir <- 'figures/dgram'#
  pdf.f(fden, file= file.path(path.dir, sprintf("%s.pdf",#
                paste("dedrogram", type[1], sep="_"))),#
        width=25, height=10)#
  return(dengram)#
}#
plot.box <- function(ylabel,#
                     dats,#
                     y1){#
  plot.ci <- function(){#
    col.lines <- brewer.pal(3, "Dark2")#
    col.fill <- add.alpha(col.lines, alpha=0.2)#
    layout(matrix(1, ncol=1))#
    par(oma=c(1, 5, 2, 1),#
        mar=c(2, 0, 0.5, 1))#
    boxplot(dats[,y1]~ dats$SiteStatus,#
            col=col.lines,#
            names=c("Non-assembling \n field margin",#
              "Assembling \n  hedgerow", "Non-assembling \n hedgerow"))#
    axis(2, pretty(dats[,y1]), labels=pretty(dats[,y1]))#
    mtext(ylabel, 2, line=3.5, cex=1.5)#
  }#
  path <- 'figures' #
  pdf.f(plot.ci, file=file.path(path,#
                   sprintf("%s.pdf", paste(#
                     gsub(" ", "", ylabel),#
                     "box", sep="_"))),#
        width=6, height=4)#
#
}
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")
?boxplot
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/variability')#
source('src/initialize.R')#
source('src/phyloIntBeta.R')#
#
## ************************************************************#
## prepare link community in terminal#
## ************************************************************#
edges.com <- cbind(as.character(spec$GenusSpecies),#
                  as.character(spec$PlantGenusSpecies))#
#
## lc <- getLinkCommunities(edges.com, hcmethod = "average",#
##                          bipartite=TRUE)#
## save(lc, file="saved/lc.Rdata")#
#
## ************************************************************#
## turnover of phylo interactions through time#
## ************************************************************#
load(file="saved/lc.Rdata")#
spec$Int <- paste(spec$GenusSpecies,#
                  spec$PlantGenusSpecies)#
phylo.int <- calcCommDis(spec, "Int", lc, abund.w=TRUE)#
save(phylo.int, file="saved/phyloInt.Rdata")#
#
## linear model of phylo int by years between samples#
load(file="saved/phyloInt.Rdata")#
phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
                      (1|Site),#
                      data=phylo.int$phylo.int)#
#
plot.box(ylabel="Node turnover",#
                 dats=phylo.int$phylo.int,#
                 y1="PhyloInt")#
#
## interaction lifespans#
int.lives <- lapply(phylo.int$comm, function(x) sort(colSums(x)))#
#
plot(NA, ylim=c(0,1), xlim=c(0,100))#
lapply(int.lives, function(x) points(density(x), type='l'))#
## ## ************************************************************#
## dengrogram based on shared plant interactions#
## ************************************************************#
#
## pols <- cbind(spec$GenusSpecies, spec$PlantGenusSpecies)#
## ## unique rows (interactions)#
## pols <- as.data.frame(unique(pols, MARGIN=1))#
## colnames(pols) <- c('GenusSpecies', 'PlantGenusSpecies')#
#
## clust <- calcDendDis(pols, c('GenusSpecies', 'PlantGenusSpecies'))#
## phylo.int.mod <- lmer(PhyloInt ~ Dist*SiteStatus +#
##                       (1|Site),#
##                       data=phylo.int$phylo.int)#
#
## dd.phylo <- expand.grid(Dist=seq(#
##                           from= min(phylo.int$phylo.int$Dist),#
##                           to= max(phylo.int$phylo.int$Dist),#
##                           length=10),#
##                         SiteStatus=c("control", "maturing", "mature"),#
##                         PhyloInt = 0)#
#
## phylo.pi <- predict.int(mod= phylo.int.mod,#
##                         dd=dd.phylo,#
##                         y="PhyloInt")#
#
## plot.predict(new.dd=phylo.pi,#
##                  ylabel="Node turnover",#
##                  dats=phylo.int$phylo.int,#
##                  y1="PhyloInt",#
##                  legend.loc="bottomright")
