rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="degree")#
#
rob <- sapply(ext, robustness)#
#
sites <- strsplit(names(rob), " ")
sites
?strsplit
sites <- strsplit(names(rob), "[.]")
sites
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])
sites
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])
year
years
dats <- data.frame(sites= sites,#
                   years=years,#
                   robustness=rob)
dats
head(dates)
head(dats)
rownames(dats) <- NULL
head(dats)
plot(dats$robustness~dats$years)
head(spec)
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$ypr <- spec$ypr[match(paste(spec$Site, spec$Year),#
                           paste(dats$Site, dats$Year,)]
dats$ypr <- spec$ypr[match(paste(spec$Site, spec$Year),#
                           paste(dats$Site, dats$Year))]
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]
head(dats)
plot(dats$robustness~dats$ypr)
plot(dats$Robustness~dats$ypr)
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
plot(dats$Robustness~dats$ypr)
lmer(dats$Robustness~dats$ypr + (1|dats$Site))
summary(lmer(dats$Robustness~dats$ypr + (1|dats$Site)))
library(lmerTest)#
summary(lmer(dats$Robustness~dats$ypr + (1|dats$Site)))
summary(lmer(dats$Robustness~dats$ypr + (1|dats$Site) + (1|dats$Year))
)
setwd('~/Dropbox/hedgerow_assembly/dataPrep')#
load('~/Dropbox/hedgerow/data_sets/traditional/specimens-complete.RData')#
load("/Users/lcp/Dropbox/hedgerow_network/data/veg/veg.Rdata")#
source('src/misc.R')#
source('src/prepNets.R')#
library(bipartite)#
#
spec <- dd#
spec <- spec[spec$NetPan == 'net',]#
#
spec <- spec[spec$Family == 'Syrphidae' |#
             spec$BeeNonbee == 'bee',]#
#
## keep only BACI sites#
BACI.site <- c('Barger', 'Butler', 'Hrdy', 'MullerB', 'Sperandio')#
spec <-  spec[spec$Site %in% BACI.site,]#
veg <-  veg[veg$Site %in% BACI.site,]#
#
veg$ypr <- spec$ypr[match(paste(veg$Year, veg$Site),#
                          paste(spec$Year, spec$Site))]#
#
## create species column#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                                 spec$PlantSpecies))#
#
## drop pollinators and plants without identifications#
spec <-  spec[spec$Species != '',]#
spec <-  spec[spec$PlantGenusSpecies != '',]#
#
save(spec, file='../data/networks/specimens.Rdata')#
#
## create a "year" columns grouping years 1-3 post restoration and 4-9#
spec$assem <- 'early'#
spec$assem[spec$ypr > 3] <- 'late'#
#
veg$assem <- 'early'#
veg$assem[veg$ypr > 3] <- 'late'#
#
veg.sum <- aggregate(list(abundance=veg$NumQuads),#
                     list(site=veg$Site,#
                          status=veg$assem,#
                          species=veg$PlantGenusSpecies),#
                     sum)#
#
## *******************************************************************#
## create networks#
networks <- breakNet(spec, 'Site', 'assem')#
#
## save networks for each site, timeframe#
f.path <- '../data/networks'#
saveDats(networks, names(networks), f.path)#
save(networks, file=file.path(f.path, 'networks_stages.Rdata'))#
#
## *******************************************************************#
## specialization of each species at each site#
#
species.lev <- lapply(networks, function(x){#
  sl <- specieslevel(x)#
  sl$'higher level'$tot.int <- colSums(x)#
  sl$'lower level'$tot.int <- rowSums(x)#
  return(sl)#
})#
#
specializations  <-  mapply(function(a, b, c, d)#
  getSpec(species.lev = a,#
          names.net = b),#
  a = species.lev,#
  b = names(networks),#
  SIMPLIFY = FALSE)#
#
specializations <- do.call(rbind, specializations)#
rownames(specializations) <- NULL#
#
f.path <- '../data/degree'#
save(specializations, file=file.path(f.path, 'specializations.Rdata'))#
## *******************************************************************#
## change in visits of by the generalized pollinators#
#
hist(specializations$proportional.generality[specializations$speciesType ==#
                                             "pollinator"],#
     xlab="Generalization")#
#
## plants#
diff.gens.plants <- getVisitChange(0, 0.2, "proportional.generality",#
                            "PlantGenusSpecies", "GenusSpecies")#
#
diff.spec.plants <- getVisitChange(0.5, 1, "proportional.generality",#
                            "PlantGenusSpecies", "GenusSpecies")#
#
diff.all.plants <- getVisitChange(0, 1, "proportional.generality",#
                           "PlantGenusSpecies", "GenusSpecies")#
#
## pollinators#
diff.gens.pol <- getVisitChange(0, 0.2, "proportional.generality",#
                            "GenusSpecies", "PlantGenusSpecies")#
#
diff.spec.pol <- getVisitChange(0.5, 1, "proportional.generality",#
                            "GenusSpecies", "PlantGenusSpecies")#
#
diff.all.pol <- getVisitChange(0, 1, "proportional.generality",#
                           "GenusSpecies", "PlantGenusSpecies")#
#
f.path <- '../data/degree'#
save(diff.gens.plants, diff.spec.plants, diff.all.plants,#
     file=file.path(f.path, 'PlantVisitDiffs.Rdata'))#
write.csv(diff.all.plants,#
          file=file.path(f.path, 'PlantVisitDiffs.csv'), row.names=FALSE)#
#
save(diff.gens.pol, diff.spec.pol, diff.all.pol,#
     file=file.path(f.path, 'PolVisitDiffs.Rdata'))#
write.csv(diff.all.pol,#
          file=file.path(f.path, 'PolVisitDiffs.csv'), row.names=FALSE)#
## *******************************************************************#
## species lists for each site#
#
plants <- getSpecies(networks, rownames)#
pols <- getSpecies(networks, rownames)#
#
f.path <- '../data/species'#
write.csv(plants, file.path(f.path, 'plants.csv'),#
          row.names=FALSE)#
save(plants, file=file.path(f.path, 'plants.Rdata'))#
#
write.csv(pols, file.path(f.path, 'pollinators.csv'),#
          row.names=FALSE)#
save(pols, file=file.path(f.path, 'pols.Rdata'))#
#
## *******************************************************************#
## species added between early and late stages#
#
plant.diffs <- getColExt(plants)#
pol.diffs <- getColExt(pols)#
#
f.path <- '../data/speciesChange'#
write.csv(plant.diffs, file.path(f.path, 'plants.csv'),#
          row.names=FALSE)#
#
write.csv(pol.diffs, file.path(f.path, 'pollinators.csv'),#
          row.names=FALSE)#
#
## *******************************************************************#
## total plants at a site#
f.path <- '../data/species'#
plants <- plants[,-2]#
plants <- unique(plants)#
write.csv(plants, file.path(f.path, 'plants_all.csv'),#
          row.names=FALSE)#
#
## *******************************************************************#
## pollinator and plant degrees by years post restoration#
spec$all <- 'all'#
#
yr.networks <- breakNet(spec, 'all', 'assem')#
#
d.pol <- lapply(yr.networks, colSums)#
d.plant <- lapply(yr.networks, rowSums)#
#
f.path <- '../data/degree'#
saveDats(d.pol, paste(names(d.pol), 'pollinators', sep="_"), f.path)#
saveDats(d.plant, paste(names(d.plant), 'plants', sep="_"), f.path)#
#
by.year <- data.frame(t(sapply(c(d.plant, d.pol), calcStats)))#
by.year$group <- rep(c('plants','pollinators'), each=2)#
by.year$assembly <- rep(c('early', 'late'), 2)#
#
write.csv(by.year, file.path(f.path, 'stats_by_yr.csv'))#
#
## *******************************************************************#
## pollinator and plant degrees across all years and sites#
#
all.networks <- breakNet(spec, 'all', 'all')#
#
d.pol.all <- lapply(all.networks, colSums)#
d.plant.all <- lapply(all.networks, rowSums)#
#
saveDats(d.pol.all, 'across_yrs_pollinators', f.path)#
saveDats(d.plant.all, 'across_yrs_plants', f.path)#
#
all.dats <- data.frame(t(sapply(c(d.plant.all, d.pol.all), calcStats)))#
all.dats$group <- c('plants','pollinators')#
#
write.csv(all.dats, file.path(f.path, 'stats_across_yrs.csv'))#
#
## *******************************************************************#
## characteristics of plant colonists#
plant.col <- plant.diffs[plant.diffs$class == "colonist",]#
#
plant.col$earlyAbund <- veg.sum$abundance[veg.sum$status ==#
                                          "early"][match(#
                                           plant.col$species,#
                                           veg.sum$species)]#
plant.col$lateAbund <- veg.sum$abundance[veg.sum$status ==#
                                         "late"][match(#
                                          plant.col$species,#
                                          veg.sum$species)]#
#
plant.col$degree <- d.plant$all_late[match(plant.col$species,#
                                           names(d.plant$all_late))]#
#
## number of species that interact#
con.plant <- lapply(yr.networks, getCon, 1)#
#
plant.col$partners <- con.plant$all_late[match(plant.col$species,#
                                               names(con.plant$all_late))]#
f.path <- '../data/speciesChange'#
write.csv(plant.col, file.path(f.path, 'plants_char.csv'),#
          row.names=FALSE)#
#
## *******************************************************************#
## stable network structure#
networks.by.year <- breakNet(spec, 'Site', 'Year')#
#
plant.species <- sapply(networks.by.year, nrow)#
plant.species <- data.frame(richness=plant.species,#
                            sites =#
                              sapply(strsplit(names(plant.species),#
                                              "_"),#
                                     function(x) x[1]),#
                            years =#
                              sapply(strsplit(names(plant.species),#
                                              "_"),#
                                     function(x) x[2]))#
write.csv(plant.species, file.path(f.path, 'plants_change.csv'),#
          row.names=FALSE)
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
plot(dats$Robustness~dats$ypr)#
#
library(lmerTest)#
summary(lmer(dats$Robustness~dats$ypr + (1|dats$Site) + (1|dats$Year)))
setwd('~/Dropbox/hedgerow_assembly/dataPrep')#
load('~/Dropbox/hedgerow/data_sets/traditional/specimens-complete.RData')#
load("/Users/lcp/Dropbox/hedgerow_network/data/veg/veg.Rdata")#
source('src/misc.R')#
source('src/prepNets.R')#
library(bipartite)#
#
spec <- dd#
spec <- spec[spec$NetPan == 'net',]#
#
## spec <- spec[spec$Family == 'Syrphidae' |#
##              spec$BeeNonbee == 'bee',]#
#
## create species column#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                                 spec$PlantSpecies))#
#
## drop pollinators and plants without identifications#
spec <-  spec[spec$Species != '',]#
spec <-  spec[spec$PlantGenusSpecies != '',]#
#
save(spec, file='../data/networks/allSpecimens.Rdata')
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
plot(dats$Robustness~dats$ypr)#
#
library(lmerTest)#
summary(lmer(dats$Robustness~dats$ypr + (1|dats$Site) + (1|dats$Year)))
dats$ypr <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
plot(dats$Robustness~dats$SiteStatus)#
#
library(lmerTest)#
summary(lmer(dats$Robustness~dats$SiteStatus + (1|dats$Site) + (1|dats$Year)))
dats$SiteStatus <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]
plot(dats$Robustness~dats$SiteStatus)
boxplot(dats$Robustness~dats$SiteStatus)
setwd('~/Dropbox/hedgerow_assembly/dataPrep')#
load('~/Dropbox/hedgerow/data_sets/traditional/specimens-complete.RData')#
load("/Users/lcp/Dropbox/hedgerow_network/data/veg/veg.Rdata")#
source('src/misc.R')#
source('src/prepNets.R')#
library(bipartite)#
#
spec <- dd#
spec <- spec[spec$NetPan == 'net',]#
#
## spec <- spec[spec$Family == 'Syrphidae' |#
##              spec$BeeNonbee == 'bee',]#
#
## create species column#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                                 spec$PlantSpecies))#
#
## drop pollinators and plants without identifications#
spec <-  spec[spec$Species != '',]#
spec <-  spec[spec$PlantGenusSpecies != '',]#
#
to.drop.status <- c("forb", "natural", "restored")#
spec <- spec#
#
save(spec, file='../data/networks/allSpecimens.Rdata')
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$SiteStatus <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
boxplot(dats$Robustness~dats$SiteStatus)
setwd('~/Dropbox/hedgerow_assembly/dataPrep')#
load('~/Dropbox/hedgerow/data_sets/traditional/specimens-complete.RData')#
load("/Users/lcp/Dropbox/hedgerow_network/data/veg/veg.Rdata")#
source('src/misc.R')#
source('src/prepNets.R')#
library(bipartite)#
#
spec <- dd#
spec <- spec[spec$NetPan == 'net',]#
#
## spec <- spec[spec$Family == 'Syrphidae' |#
##              spec$BeeNonbee == 'bee',]#
#
## create species column#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                                 spec$PlantSpecies))#
#
## drop pollinators and plants without identifications#
spec <-  spec[spec$Species != '',]#
spec <-  spec[spec$PlantGenusSpecies != '',]#
#
to.drop.status <- c("forb", "natural", "restored")#
spec <- spec[!spec$SiteStatus %in% to.drop.status]#
#
save(spec, file='../data/networks/allSpecimens.Rdata')
spec$SiteStatus %in% to.drop.status
setwd('~/Dropbox/hedgerow_assembly/dataPrep')#
load('~/Dropbox/hedgerow/data_sets/traditional/specimens-complete.RData')#
load("/Users/lcp/Dropbox/hedgerow_network/data/veg/veg.Rdata")#
source('src/misc.R')#
source('src/prepNets.R')#
library(bipartite)#
#
spec <- dd#
spec <- spec[spec$NetPan == 'net',]#
#
## spec <- spec[spec$Family == 'Syrphidae' |#
##              spec$BeeNonbee == 'bee',]#
#
## create species column#
spec$PlantGenusSpecies <-  fix.white.space(paste(spec$PlantGenus,#
                                                 spec$PlantSpecies))#
#
## drop pollinators and plants without identifications#
spec <-  spec[spec$Species != '',]#
spec <-  spec[spec$PlantGenusSpecies != '',]#
#
to.drop.status <- c("forb", "natural", "restored")#
spec <- spec[!spec$SiteStatus %in% to.drop.status,]#
#
save(spec, file='../data/networks/allSpecimens.Rdata')
v
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$SiteStatus <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
boxplot(dats$Robustness~dats$SiteStatus)
library(lmerTest)#
summary(lmer(dats$Robustness~dats$SiteStatus + (1|dats$Site) + (1|dats$Year)))
boxplot(dats$Robustness~dats$SiteStatus)
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
library(lmerTest)#
#
## create pp matrix for each site, year#
nets <- break.net(spec)#
#
## robustness#
#
ext <- lapply(nets, second.extinct,#
              participant="higher",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$SiteStatus <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
boxplot(dats$Robustness~dats$SiteStatus)#
boxplot(dats$Robustness~dats$ypr)
rm(list=ls())#
setwd('~/Dropbox/hedgerow_assembly/analysis/resilence')#
source('src/initialize.R')#
library(lmerTest)#
#
## create pp matrix for each site, year#
nets <- break.net(spec)
nes[[1]]
nets[[1]]
ext <- lapply(nets, second.extinct,#
              participant="higher",#
              method="abund")
lapply(nets, dim)
ext <- lapply(nets, second.extinct,#
              participant="lower",#
              method="abund")#
#
rob <- sapply(ext, robustness)#
#
sites <- sapply(strsplit(names(rob), "[.]"), function(x) x[1])#
years <- sapply(strsplit(names(rob), "[.]"), function(x) x[2])#
#
dats <- data.frame(Site= sites,#
                   Year=years,#
                   Robustness=rob)#
rownames(dats) <- NULL#
#
dats$SiteStatus <- spec$SiteStatus[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
dats$ypr <- spec$ypr[match(paste(dats$Site, dats$Year),#
                           paste(spec$Site, spec$Year))]#
#
boxplot(dats$Robustness~dats$SiteStatus)#
#
summary(lmer(dats$Robustness~dats$SiteStatus#
             + (1|dats$Site) + (1|dats$Year)))
boxplot(dats$Robustness~dats$ypr)#
summary(lmer(dats$Robustness~dats$ypr#
             + (1|dats$Site) + (1|dats$Year)))
summary(lmer(Robustness~ypr#
             + (1|Site) + (1|Year),#
             data=dats[!is.na(dats$ypr),]))
species.lev <- lapply(nets, function(x){#
  sl <- specieslevel(x)#
  sl$'higher level'$tot.int <- colSums(x)#
  sl$'lower level'$tot.int <- rowSums(x)#
  return(sl)#
})
source('../dataPrep/src/prepNets.R')
source('../../dataPrep/src/prepNets.R')
specializations  <-  mapply(function(a, b, c, d)#
  getSpec(species.lev = a,#
          names.net = b),#
  a = species.lev,#
  b = names(networks),#
  SIMPLIFY = FALSE)
specializations  <-  mapply(function(a, b, c, d)#
  getSpec(species.lev = a,#
          names.net = b),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net){#
  browser()#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, "_")[[1]][1]#
  all.pp$assem <- strsplit(names.net, "_")[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b, c, d)#
  getSpec(species.lev = a,#
          names.net = b),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
n.pp <- sapply(species.lev, nrow)
n.pp
pp <- unlist(sapply(species.lev, rownames))
pp
names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp
all.pp
all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, "_")[[1]][1]#
  all.pp$assem <- strsplit(names.net, "_")[[1]][2]
all.pp
Q
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b, c, d)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
names(nets)
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
specializations  <-  mapply(function(a, b)#
                            browser()#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  browser()#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]
all.pp
Q
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
Q
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
v
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
class(species.lev)
lapply(class(species.lev))
lapply(species.lev, class)
sapply(species.lev, class)
sapply(species.lev, class) == "list"
all(sapply(species.lev, class) == "list")
sapply(species.lev, dim)
sapply(species.lev, length)
sapply(species.lev, function(x) dim(x[[1]]))
sapply(species.lev, function(x) dim(x[[1]])) >1
all(sapply(species.lev, function(x) dim(x[[1]])) >1)
all(sapply(species.lev, function(x) dim(x[[2]])) >1)
species.lev <- lapply(nets, function(x){#
  sl <- specieslevel(x)#
  sl$'higher level'$tot.int <- colSums(x)#
  sl$'lower level'$tot.int <- rowSums(x)#
  return(sl)#
})
lapply(nets, dim)
sapply(nets, dim)
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  print(pp)#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  all.pp$GenusSpecies <- pp#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  try(all.pp$GenusSpecies <- pp, silent=TRUE)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  try(all.pp$GenusSpecies <- pp, silent=TRUE)#
  if(inherits(all.pp, "try-error")) browser()#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
specializations
head(specializations)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  try(all.pp$GenusSpecies <- pp)#
  if(inherits(all.pp, "try-error")) browser()#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  broswer()#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  browser()#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
all.pp
pp
Q
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
 if(nrow(all.pp) != length(pp)) browser()#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
 if(nrow(all.pp) != length(pp)){#
   browser()#
 }#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  print(nrow(all.pp) != length(pp))#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  print(nrow(all.pp) == length(pp))#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  print(names.net)#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
nets[["Berm.2015"]]
species.lev[["Berm.2015"]]
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  if(names.net == "Berm.2015") browser()#
  n.pp <- sapply(species.lev, nrow)#
  pp <- unlist(sapply(species.lev, rownames))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  print(names.net)#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
n.pp <- sapply(species.lev, nrow)
n.pp
pp <- unlist(sapply(species.lev, rownames))
pp
class(pp)
c(pp)
Q
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  ## if(names.net == "Berm.2015") browser()#
  n.pp <- sapply(species.lev, nrow)#
  pp <- c(unlist(sapply(species.lev, rownames)))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  print(names.net)#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
## extreact specialization scores from specieslevel function and#
## return data frame#
getSpec <- function(species.lev, names.net, seps="_"){#
  ## if(names.net == "Berm.2015") browser()#
  n.pp <- sapply(species.lev, nrow)#
  pp <- c(unlist(sapply(species.lev, rownames)))#
  names(pp) <- NULL#
  all.pp <- do.call(rbind, species.lev)#
  rownames(all.pp) <- NULL#
  try(all.pp$GenusSpecies <- pp)#
  all.pp$speciesType <- c(rep("pollinator", n.pp[1]),#
                          rep("plant", n.pp[2]))#
  all.pp$Site <- strsplit(names.net, seps)[[1]][1]#
  all.pp$assem <- strsplit(names.net, seps)[[1]][2]#
  return(all.pp)#
}
specializations  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)
head(specializations)
specializations <- do.call(rbind, specializations)#
rownames(specializations) <- NULL
head(specializations)
head(spec)
specializations$ypr[match(paste(specializations$Site, specializations$Year),#
                           paste(spec$Site, spec$Year))]
head(specializations$ypr)
colnames(specializations)
specializations$ypr[match(paste(specializations$Site, specializations$assem),#
                           paste(spec$Site, spec$Year))]
specializations$assem
specializations$Site
specializations$ypr <- spec$ypr[match(paste(specializations$Site,#
                                            specializations$assem),#
                           paste(spec$Site, spec$Year))]
head(specializations)
plot(specializations$d ~ specializations$ypr)
plot(specializations$d[speciesType == "pollinator"] ~#
     specializations$ypr[speciesType == "pollinator"])
specs  <-  mapply(function(a, b)#
  getSpec(species.lev = a,#
          names.net = b,#
          seps="[.]"),#
  a = species.lev,#
  b = names(nets),#
  SIMPLIFY = FALSE)#
#
specs <- do.call(rbind, specs)#
rownames(specs) <- NULL#
#
specs$ypr <- spec$ypr[match(paste(specs$Site,#
                                            specs$assem),#
                           paste(spec$Site, spec$Year))]
plot(specs$d[specs$speciesType == "pollinator"] ~#
     specs$ypr[specs$speciesType == "pollinator"])
colnames(specs)
?specieslevel
plot(specs$proportional.generality[specs$speciesType == "pollinator"] ~#
     specs$ypr[specs$speciesType == "pollinator"])
plot(specs$degree[specs$speciesType == "pollinator"] ~#
     specs$ypr[specs$speciesType == "pollinator"])
plot(specs$d[specs$speciesType == "pollinator"] ~#
     specs$ypr[specs$speciesType == "pollinator"])
unique(specs$GenusSpecies)
unique(specs$GenusSpecies[specs$speciesType == "pollinator"])
pols <- unique(specs$GenusSpecies[specs$speciesType == "pollinator"])#
cols <- rainbow(length(pols))
cols
plot(NA, ylim=range(specs$d),#
     xlim=range(specs$ypr))
plot(NA, ylim=range(specs$d),#
     xlim=range(specs$ypr, na.rm=TRUE))
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x]#
         points(this.specs$d ~#
              this.specs$ypr, cols=cols[x], type="o")#
       })
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$d ~#
              this.specs$ypr, cols=cols[x], type="o")#
       })
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
pols <- unique(specs$GenusSpecies[specs$speciesType == "pollinator"])#
cols <- rainbow(length(pols))#
names(cols) <- pols#
#
plot(NA, ylim=range(specs$d),#
     xlim=range(specs$ypr, na.rm=TRUE))#
#
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         browser()#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
Q
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         browser()#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
this.specs
Q
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         this.specs <- aggregate(list(d=this.specs$d),#
                                 list(ypr=this.specs$ypr,#
                                      GenusSpecies=this.specs$GenusSpecies),#
                                 mean, na.rm=TRUE)#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
plot(NA, ylim=range(specs$d),#
     xlim=range(specs$ypr, na.rm=TRUE))#
#
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         this.specs <- aggregate(list(d=this.specs$d),#
                                 list(ypr=this.specs$ypr,#
                                      GenusSpecies=this.specs$GenusSpecies),#
                                 mean, na.rm=TRUE)#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x], type="o")#
       })
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x])#
       })
plot(NA, ylim=range(specs$d),#
     xlim=range(specs$ypr, na.rm=TRUE))#
#
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$d ~#
              this.specs$ypr, col=cols[x])#
       })
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies), data= specs))
summary(lmer(degree ~ ypr + (1|Site) + (1|GenusSpecies), data= specs))
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$degree ~#
              this.specs$ypr, col=cols[x])#
       })
plot(NA, ylim=range(specs$degree),#
     xlim=range(specs$ypr, na.rm=TRUE))#
#
lapply(pols,#
       function(x){#
         this.specs <- specs[specs$GenusSpecies == x,]#
         points(this.specs$degree ~#
              this.specs$ypr, col=cols[x])#
       })
hist(spec$d[spec$speciesType == "pollinator"])
hist(specs$d[spec$speciesType == "pollinator"])
specs$d[spec$speciesType == "pollinator"]
hist(specs$d[specs$speciesType == "pollinator"])
median(specs$d[specs$speciesType == "pollinator"])
specs$specialization <- "spec"
specs$specialization[specs$d > 0.2] <- "gen"
head(specs)
summary(lmer(degree ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen"]))
summary(lmer(degree ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "pollinator",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "pollinator",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "plant",]))#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "plant",]))
specs$specialization <- "spec"#
specs$specialization[specs$d > 0.3] <- "gen"#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "pollinator",]))#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "pollinator",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "plant",]))#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "plant",]))
specs$specialization <- "spec"#
specs$specialization[specs$d > 0.1] <- "gen"#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "pollinator",]))#
#
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "pollinator",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "gen" &#
               specs$speciesType == "plant",]))
summary(lmer(d ~ ypr + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$specialization == "spec"  &#
               specs$speciesType == "plant",]))
summary(lmer(d ~ ypr*specialization + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$speciesType == "pollinator",]))
summary(lmer(d ~ ypr*specialization + (1|Site) + (1|GenusSpecies),#
             data= specs[specs$speciesType == "pollinator",]))
?lmer
